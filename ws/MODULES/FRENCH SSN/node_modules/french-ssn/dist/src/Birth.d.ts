import { Month } from "./parse/makeMonth";
import { Place } from "./parse/makePlace";
export default class Birth {
    readonly month: Month;
    readonly year: number;
    readonly country: Place["country"];
    readonly county: Place["county"];
    readonly city: Place["city"];
    constructor(month: string, year: string, place: string);
    get approximateDate(): Date;
    get approximateAge(): number;
    toJSON(): {
        month: Month | Omit<Month, "unknown">;
        year: number;
        country: import("./parse/unknown").UnknownField | {
            insee: string;
            name: string;
            unknown: undefined;
        } | ({
            insee: string;
        } & import("./parse/unknown").UnknownField) | Omit<import("./parse/unknown").UnknownField | {
            insee: string;
            name: string;
            unknown: undefined;
        } | ({
            insee: string;
        } & import("./parse/unknown").UnknownField), "unknown">;
        county: import("./parse/unknown").UnknownField | {
            insee: string;
            name: string;
            unknown: undefined;
        } | ({
            insee: string;
        } & import("./parse/unknown").UnknownField) | Omit<import("./parse/unknown").UnknownField | {
            insee: string;
            name: string;
            unknown: undefined;
        } | ({
            insee: string;
        } & import("./parse/unknown").UnknownField), "unknown">;
        city: import("./parse/unknown").UnknownField | {
            insee: string;
        };
        approximateDate: Date;
        approximateAge: number;
    };
}
//# sourceMappingURL=Birth.d.ts.map